package norman.gurps.combat;

import norman.gurps.combat.model.ActionType;
import norman.gurps.combat.model.ArmorPiece;
import norman.gurps.combat.model.Combatant;
import norman.gurps.combat.model.DamageType;
import norman.gurps.combat.model.GameChar;
import norman.gurps.combat.model.HealthStatus;
import norman.gurps.combat.model.HitLocation;
import norman.gurps.combat.model.MeleeWeapon;
import norman.gurps.combat.model.MeleeWeaponMode;
import norman.gurps.combat.model.ParryType;
import norman.gurps.combat.model.RangedWeapon;
import norman.gurps.combat.model.Shield;

import java.util.HashSet;
import java.util.Set;

public class TestHelper {
    public static GameChar getGameChar1() {
        GameChar gameChar = new GameChar();
        gameChar.setName("Bob the Example");
        gameChar.setStrength(14);
        gameChar.setDexterity(13);
        gameChar.setIntelligence(12);
        gameChar.setHealth(11);
        gameChar.setHitPoints(15);
        gameChar.setBasicSpeed(6.25);
        gameChar.setBasicMove(7);
        gameChar.setDamageResistance(1);
        gameChar.setEncumbranceLevel(1);
        gameChar.setUnconsciousnessCheck(13);
        gameChar.setDeathCheck(12);
        MeleeWeapon broadsword = new MeleeWeapon();
        broadsword.setName("Broadsword");
        broadsword.setSkill(14);
        MeleeWeaponMode swing = new MeleeWeaponMode();
        swing.setName("swing");
        swing.setDamageDice(2);
        swing.setDamageAdds(1);
        swing.setDamageType(DamageType.CUTTING);
        swing.getReaches().add(1);
        broadsword.getMeleeWeaponModes().add(swing);
        MeleeWeaponMode thrust = new MeleeWeaponMode();
        thrust.setName("thrust");
        thrust.setDamageDice(1);
        thrust.setDamageAdds(1);
        thrust.setDamageType(DamageType.CRUSHING);
        thrust.getReaches().add(1);
        broadsword.getMeleeWeaponModes().add(thrust);
        broadsword.setParryType(ParryType.YES);
        broadsword.setParryModifier(0);
        broadsword.setMinimumStrength(10);
        gameChar.getMeleeWeapons().add(broadsword);
        RangedWeapon longbow = new RangedWeapon();
        longbow.setName("Longbow");
        longbow.setSkill(13);
        longbow.setDamageDice(1);
        longbow.setDamageAdds(2);
        longbow.setDamageType(DamageType.IMPALING);
        longbow.setAccuracy(3);
        longbow.setHalfDamageRange(210);
        longbow.setMaximumRange(280);
        longbow.setRateOfFire(1);
        longbow.setMinimumStrength(11);
        longbow.setBulk(-8);
        longbow.setRecoil(1);
        gameChar.getRangedWeapons().add(longbow);
        Shield shield = new Shield();
        shield.setName("Small Shield");
        shield.setSkill(13);
        shield.setDefenseBonus(1);
        gameChar.getShields().add(shield);
        ArmorPiece body = new ArmorPiece();
        body.setName("Leather Jacket");
        body.getHitLocations().add(HitLocation.TORSO);
        body.getHitLocations().add(HitLocation.ARMS);
        body.setDamageResistance(1);
        gameChar.getArmorPieces().add(body);
        ArmorPiece legs = new ArmorPiece();
        legs.setName("Leather Pants");
        legs.getHitLocations().add(HitLocation.LEGS);
        legs.getHitLocations().add(HitLocation.GROIN);
        legs.setDamageResistance(1);
        gameChar.getArmorPieces().add(legs);
        ArmorPiece head = new ArmorPiece();
        head.setName("Leather Cap");
        head.getHitLocations().add(HitLocation.SKULL);
        head.setDamageResistance(1);
        gameChar.getArmorPieces().add(head);
        ArmorPiece hands = new ArmorPiece();
        hands.setName("Cloth Gloves");
        hands.getHitLocations().add(HitLocation.HANDS);
        hands.setDamageResistance(1);
        gameChar.getArmorPieces().add(hands);
        ArmorPiece feet = new ArmorPiece();
        feet.setName("Shoes");
        feet.getHitLocations().add(HitLocation.FEET);
        feet.setDamageResistance(1);
        gameChar.getArmorPieces().add(feet);
        gameChar.getDefaultReadyItems().add(gameChar.getMeleeWeapons().get(0).getName());
        gameChar.getDefaultReadyItems().add(gameChar.getShields().get(0).getName());
        return gameChar;
    }

    public static GameChar getGameChar2() {
        GameChar gameChar = new GameChar();
        gameChar.setName("Grunt");
        gameChar.setStrength(10);
        gameChar.setDexterity(10);
        gameChar.setIntelligence(10);
        gameChar.setHealth(10);
        gameChar.setHitPoints(10);
        gameChar.setBasicSpeed(5.0);
        gameChar.setBasicMove(5);
        gameChar.setDamageResistance(0);
        gameChar.setEncumbranceLevel(2);
        gameChar.setUnconsciousnessCheck(10);
        gameChar.setDeathCheck(10);
        MeleeWeapon axe = new MeleeWeapon();
        axe.setName("Axe");
        axe.setSkill(12);
        MeleeWeaponMode swing = new MeleeWeaponMode();
        swing.setName("swing");
        swing.setDamageDice(1);
        swing.setDamageAdds(2);
        swing.setDamageType(DamageType.CUTTING);
        swing.getReaches().add(1);
        axe.getMeleeWeaponModes().add(swing);
        axe.setParryType(ParryType.UNBALANCED);
        axe.setParryModifier(0);
        axe.setMinimumStrength(11);
        gameChar.getMeleeWeapons().add(axe);
        RangedWeapon revolver = new RangedWeapon();
        revolver.setName("Revolver, .36");
        revolver.setSkill(12);
        revolver.setDamageDice(2);
        revolver.setDamageAdds(-1);
        revolver.setDamageType(DamageType.PIERCING);
        revolver.setAccuracy(1);
        revolver.setHalfDamageRange(120);
        revolver.setMaximumRange(1300);
        revolver.setRateOfFire(1);
        revolver.setMinimumStrength(9);
        revolver.setBulk(-2);
        revolver.setRecoil(2);
        gameChar.getRangedWeapons().add(revolver);
        Shield shield = new Shield();
        shield.setName("Medium Shield");
        shield.setSkill(11);
        shield.setDefenseBonus(2);
        gameChar.getShields().add(shield);
        ArmorPiece body = new ArmorPiece();
        body.setName("Leather Body Armor");
        body.getHitLocations().add(HitLocation.TORSO);
        body.getHitLocations().add(HitLocation.GROIN);
        body.setDamageResistance(2);
        gameChar.getArmorPieces().add(body);
        ArmorPiece legs = new ArmorPiece();
        legs.setName("Heavy Leather Leggings");
        legs.getHitLocations().add(HitLocation.LEGS);
        legs.setDamageResistance(2);
        gameChar.getArmorPieces().add(legs);
        ArmorPiece arms = new ArmorPiece();
        arms.setName("Heavy Leather Sleeves");
        arms.getHitLocations().add(HitLocation.ARMS);
        arms.setDamageResistance(2);
        gameChar.getArmorPieces().add(arms);
        ArmorPiece head = new ArmorPiece();
        head.setName("Leather Helm");
        head.getHitLocations().add(HitLocation.SKULL);
        head.getHitLocations().add(HitLocation.FACE);
        head.setDamageResistance(2);
        gameChar.getArmorPieces().add(head);
        ArmorPiece hands = new ArmorPiece();
        hands.setName("Leather Gloves");
        hands.getHitLocations().add(HitLocation.HANDS);
        hands.setDamageResistance(2);
        gameChar.getArmorPieces().add(hands);
        ArmorPiece feet = new ArmorPiece();
        feet.setName("Boots");
        feet.getHitLocations().add(HitLocation.FEET);
        feet.setDamageResistance(2);
        gameChar.getArmorPieces().add(feet);
        gameChar.getDefaultReadyItems().add(gameChar.getMeleeWeapons().get(0).getName());
        gameChar.getDefaultReadyItems().add(gameChar.getShields().get(0).getName());
        return gameChar;
    }

    public static Combatant getCombatant(GameChar gameChar) {
        Set<String> existingLabels = new HashSet<>();
        return getCombatant(gameChar, existingLabels);
    }

    public static Combatant getCombatant(GameChar gameChar, Set<String> existingLabels) {
        Combatant combatant = new Combatant(gameChar, existingLabels);
        combatant.getReadyItems().addAll(combatant.getGameChar().getDefaultReadyItems());
        combatant.setCurrentDamage(0);
        combatant.setPreviousDamage(0);
        combatant.setUnconsciousnessCheckFailed(false);
        combatant.setNbrOfDeathChecksNeeded(0);
        combatant.setDeathCheckFailed(false);
        HealthStatus healthStatus = HealthStatus.ALIVE;
        combatant.setHealthStatus(healthStatus);
        int basicMove = combatant.getGameChar().getBasicMove();
        int encumbranceLevel = combatant.getGameChar().getEncumbranceLevel();
        int currentMove = basicMove - encumbranceLevel;
        combatant.setCurrentMove(currentMove);
        combatant.setShockPenalty(0);
        combatant.setActionType(ActionType.DO_NOTHING);
        return combatant;
    }
}
